@using Nop.Plugin.Company.Company.Areas.Admin.Models
@model CompanyModel
@if (Model.Id > 0 && Model.CustomerExist)
{
<div class="card-body">
    @await Html.PartialAsync("Table", new DataTablesModel
{
    Name = "customer-addresses-grid",
    UrlRead = new DataUrl("AddressesSelect", "Company", new RouteValueDictionary { [nameof(Model.CompanyAddressSearchModel.CompanyId)] = Model.Id }),
    UrlDelete = new DataUrl("AddressDelete", "Company", new RouteValueDictionary { [nameof(Model.CompanyAddressSearchModel.CompanyId)] = Model.Id }),
    Length = Model.CompanyAddressSearchModel.PageSize,
    LengthMenu = Model.CompanyAddressSearchModel.AvailablePageSizes,
    ColumnCollection = new List<ColumnProperty>
        {
            new ColumnProperty("Address.FirstName")
            {
                Title = T("Admin.Address.Fields.FirstName").Text
            },
            new ColumnProperty("Address.LastName")
            {
                Title = T("Admin.Address.Fields.LastName").Text
            },
            new ColumnProperty("Address.Email")
            {
                Title = T("Admin.Address.Fields.Email").Text
            },
            new ColumnProperty("Address.PhoneNumber")
            {
                Title = T("Admin.Address.Fields.PhoneNumber").Text
            },
            new ColumnProperty("Address.FaxNumber")
            {
                Title = T("Admin.Address.Fields.FaxNumber").Text
            },
            new ColumnProperty("Address.AddressHtml")
            {
                Title = T("Admin.Address").Text,
                Encode = false
            },
            new ColumnProperty("Address.Id")
            {
                Title = T("Admin.Common.Edit").Text,
                Width = "100",
                ClassName =  NopColumnClassDefaults.Button,
                Render = new RenderCustom("renderProductAttributesCombinationsColumnEdit")
            },
            new ColumnProperty("Address.Id")
            {
                Title = T("Admin.Common.Delete").Text,
                Width = "100",
                Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                ClassName =  NopColumnClassDefaults.Button
            }
        }
})

    <script>
        function renderProductAttributesCombinationsColumnEdit(data, type, row, meta) {
            return '<a href="/Admin/Company/AddressEdit?companyId=' + row.CompanyId + '&addressid='+row.Address.Id+'"><i class="fas fa-pencil-alt"></i>@T("Admin.Common.Edit").Text</a>';
                }
    </script>
</div>
 <div class="card-body">
        <button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("AddressCreate", new { companyId = Model.Id })'">
            @T("Admin.Customers.Customers.Addresses.AddButton")
        </button>
    </div>
}
else
{
     <div class="card-body">
        @T("Admin.Company.Companies.Addresses.SaveBeforeEdit")
    </div>
}
